#pragma indent
using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Compiler.Parsetree;
using Nemerle.Compiler.Typedtree;
using Nemerle.Text;
using Nemerle.Utility;
using System;
using System.Collections.Generic;
using System.Linq;

namespace MacroLibrary1
    public macro sha1(str)
        HexImpl.Transform(Macros.ImplicitCTX(), 40, str)

    module HexImpl
        allowedChars: list[char] = $['0'..'9'] + $['A'..'F']
        
        public Transform(typer: Typer, length: byte, str: PExpr) : PExpr
            Macros.DefineCTX(typer);
            match (str)
             | <[ $(s: string) ]> when (s.Length != length) =>
                    Message.Error($"Expecting string of size $length, but was $(s.Length)"); <[]>
             | <[ $(s: string) ]> =>
                    match (s.Filter(x => !allowedChars.Contains(x)))
                     | [] => 
                         <[
                            $[0..$s.Length - 1].MapToArrayFiltered(
                                x => x % 2 == 0, 
                                x => Convert.ToByte($s.Substring(x, 2), 16));
                        ]>
                     | wrongChars => Message.Error($"Wrong characters in hex string: $wrongChars"); <[]>
             | expr => throw Exception($"Expected hex string, but got $expr.");
