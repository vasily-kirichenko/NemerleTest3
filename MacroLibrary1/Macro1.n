using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Internal;

using System;
using System.Collections.Generic;
using System.Linq;
using Hopac;

namespace MacroLibrary1
{
    [assembly: Operator ("MacroLibrary1", "multiply", false, 160, 161)]
    public macro multiply(op1, op2) {
        <[ $op1 * $op2 ]>
    }

    public macro @>>==(x, x2yJ) {
        Impl.bind(x, x2yJ)
    }
    
    public macro choose(alts)
    syntax ("select", "(", alts, ")")
    {
        <[ 
            def list = List();
            foreach (a in ..$alts) list.Add(a);
            Alt.choose(a); 
        ]>
    }
    
    using Microsoft.FSharp.Core;
    using Nemerle.Compiler.Parsetree;
    
    module Impl {
        internal bind (x: PExpr, x2yJ: PExpr) : PExpr {
            <[ Job.bind(FSharpFunc.FromConverter($x2yJ), $x) ]>
        }
    }
}
